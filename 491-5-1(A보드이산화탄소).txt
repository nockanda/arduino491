//10번보드의 코드

#include <ESP8266WiFi.h>
#include <espnow.h>
#include <SoftwareSerial.h>
#include <MHZ19.h>

SoftwareSerial ss(D1,D2);
MHZ19 mhz(&ss);

byte board[] = {0x68,0xC6,0x3A,0x9D,0x68,0x9F};

unsigned long t = 0;

struct Nockanda{
  int co2;
  int temp;
};

Nockanda mydata;

void setup() {
  // put your setup code here, to run once:

  Serial.begin(115200);
  ss.begin(9600);
  WiFi.mode(WIFI_STA); //제일 처음 할일! 와이파이모드를 스테이션 모드로!

  //ESPNOW의 기능을 활성화한다!
  if (esp_now_init() != 0) {
    //ESP NOW 시작 실패!
    Serial.println("ESPNOW 실패!");
    return;
  }else{
     //ESP NOW 시작 성공!
     Serial.println("ESPNOW 성공!");
  }

  //지금 이보드의 역할은 주고 받는것을 다하겠다!
  esp_now_set_self_role(ESP_NOW_ROLE_COMBO);

  //나의 슬레이브를 등록해야겠다!
  esp_now_add_peer(board, ESP_NOW_ROLE_COMBO, 1, NULL, 0);//뒤에 2개는 ID, PW

  //송신완료 콜백함수 등록
  esp_now_register_send_cb(OnDataSent);

  //수신완료 콜백 함수 등록
  esp_now_register_recv_cb(OnDataRecv);

  //데이터를 전송한다!
  MHZ19_RESULT response = mhz.retrieveData();
  if (response == MHZ19_RESULT_OK)
  {
    //mhz.getCO2()
    //mhz.getTemperature()
    mydata.co2 = mhz.getCO2();
    mydata.temp = mhz.getTemperature();
    esp_now_send(board, (uint8_t *) &mydata, sizeof(mydata));
  }
  else
  {
    Serial.print(F("Error, code: "));
    Serial.println(response);
  }
  

  
}

void loop() {
  // put your main code here, to run repeatedly:
  
}

//송신콜백함수 원형:
void OnDataSent(uint8_t *mac, uint8_t status) {
   //status가 0일때 송신 완료!
   if(status == 0){
      Serial.println("성공적으로 송신했음!");
   }else{
      Serial.println("송신 실패!!");
   }
   //딥슬립을 건다!
   ESP.deepSleep(10E6); //㎲
}


//수신콜백함수 원형:
void OnDataRecv(uint8_t * mac, uint8_t * data, uint8_t len) {
  String text = "";
  for(int i = 0;i<len;i++){
    text += (char)data[i];
  }
  Serial.println(text);
}
